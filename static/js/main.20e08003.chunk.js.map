{"version":3,"sources":["styles/header.module.scss","styles/Details.module.scss","styles/Book.module.scss","styles/Footer.module.scss","actions/action.js","components/Like.js","components/EachBook.js","components/Loader.js","components/Books.js","components/Details.js","components/Favourites.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","reducers/reducer.js","index.js"],"names":["module","exports","header","h1","nav","ul","li","main","description","details","article","readmore","footer","FETCH_SUCCESS","TOGGLE_FAVOURITE","fetchBooksRequest","query","type","fetchBooksSuccess","payload","fetchBooksFailure","error","toggleFavourite","id","Like","props","classes","isFavourite","react_default","a","createElement","onClick","style","cursor","className","concat","Book","book","onLike","src","volumeInfo","imageLinks","thumbnail","alt","title","authors","categories","searchInfo","textSnippet","components_Like","react_router_dom","to","Loader","connect","state","bookState","books","length","Loader_Loader","Fragment","styles","map","EachBook","key","bookId","Details","_this2","this","fetch","match","params","then","res","json","setState","catch","console","log","small","publisher","publishedDate","printedPageCount","rel","href","accessInfo","webReaderLink","target","Component","filter","Header","App","fetchBooksActions","components_Header","react_router","exact","path","component","Books","Favourites","Footer","dispatch","booksActions","bookData","items","Boolean","window","location","hostname","initialState","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","arguments","undefined","action","ActionTypes","Object","objectSpread","applyMiddleware","apply","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20e08003.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1iqfc\",\"h1\":\"header_h1__kz_V9\",\"nav\":\"header_nav__2UZUS\",\"ul\":\"header_ul__8gYSQ\",\"li\":\"header_li__I4Zpq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Details_main__1FiYO\",\"description\":\"Details_description__11z8f\",\"details\":\"Details_details__2Zx12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"Book_article__3105j\",\"readmore\":\"Book_readmore__dipnK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3fGRD\"};","export const FETCH_REQUEST = \"FETCH_REQUEST\";\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nexport const FETCH_FAILURE = \"FETCH_FAILURE\";\nexport const TOGGLE_FAVOURITE = \"TOGGLE_FAVOURITE\";\n\nexport const fetchBooksRequest = query => ({\n  type: FETCH_REQUEST,\n  query\n});\n\nexport const fetchBooksSuccess = payload => {\n  return { type: FETCH_SUCCESS, payload };\n};\n\nexport const fetchBooksFailure = error => ({\n  type: FETCH_FAILURE,\n  payload: { error }\n});\n\nexport const toggleFavourite = id => ({\n  type: TOGGLE_FAVOURITE,\n  id\n});\n/* \nexport function fetchRequest(payload) {\n  return { type: \"FETCH_REQUEST\", payload };\n}\n */\n\nexport function fetchBooks(query) {\n  return dispatch => {\n    dispatch(fetchBooksRequest());\n    return fetch(\n      `https://www.googleapis.com/books/v1/volumes?q=a+very+short+introduction`\n    )\n      .then(res => res.json())\n      .then(books => {\n        dispatch(fetchBooksSuccess(books.items));\n        return books.items;\n      })\n      .catch(error => dispatch(fetchBooksFailure(error)));\n  };\n}\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"\";\n  if (!props.isFavourite) {\n    classes = \"far\";\n  }\n  // else {\n  //   classes = \"fas\";\n  // }\n  if (props.isFavourite) {\n    classes = \"fas\";\n  }\n  return (\n    <div>\n      <i\n        onClick={props.onClick}\n        style={{ cursor: \"pointer\" }}\n        className={`${classes} fa-heart`}\n      />\n    </div>\n  );\n};\n\nexport default Like;\n","import React from \"react\";\nimport style from \"../styles/Book.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport Like from \"./Like\";\n\nconst Book = props => {\n  const { book, onLike } = props;\n  return (\n    <article className={style.article}>\n      <img src={book.volumeInfo.imageLinks.thumbnail} alt=\"Book Cover\" />\n      <div>\n        <h2>\n          <span>Title: </span>\n          {book.volumeInfo.title}\n        </h2>\n        <h3>\n          <span>Author:</span>\n          {book.volumeInfo.authors}\n        </h3>\n        <h3>\n          <span>Book Genre: </span>\n          {book.volumeInfo.categories}\n        </h3>\n      </div>\n      <section>\n        <p>{book.searchInfo.textSnippet}</p>\n      </section>\n      <Like isFavourite={book.isFavourite} onClick={() => onLike(book.id)} />\n      <p className={style.readmore}>\n        <Link to={`/details/${book.id}`}>Read More >></Link>\n      </p>\n    </article>\n  );\n};\n\nexport default Book;\n","import React from \"react\";\nimport \"../styles/Loader.css\";\n\nexport default function Loader() {\n  return (\n    <div className=\"lds-facebook\">\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { toggleFavourite } from \"../actions/action\";\nimport styles from \"../styles/App.module.scss\";\nimport Book from \"./EachBook\";\nimport Loader from \"./Loader\";\n\nconst Main = props => {\n  const { books } = props.bookState;\n\n  const handleFavoriteToggle = id => {\n    props.toggleFavourite(id);\n  };\n  if (books.length === 0) return <Loader />;\n  return (\n    <React.Fragment>\n      <main className={styles.main}>\n        {books.map(book => {\n          return (\n            <Book\n              key={book.id}\n              book={book}\n              onLike={bookId => handleFavoriteToggle(bookId)}\n            />\n          );\n        })}\n      </main>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { bookState: state };\n};\n\nexport default connect(\n  mapStateToProps,\n  { toggleFavourite }\n)(Main);\n\n// export default Main;\n","import React, { Component } from \"react\";\nimport Loader from \"./Loader\";\nimport details from \"../styles/Details.module.scss\";\n\nclass Details extends Component {\n  state = { book: null };\n\n  componentDidMount() {\n    fetch(\n      `https://www.googleapis.com/books/v1/volumes/${\n        this.props.match.params.id\n      }`\n    )\n      .then(res => res.json())\n      .then(book => {\n        this.setState({ book: book });\n        return book;\n      })\n      .catch(error => console.log(\"Fetching Faled!\"));\n  }\n\n  render() {\n    const { book } = this.state;\n    if (!book) return <Loader />;\n    return (\n      book && (\n        <main className={details.main}>\n          {console.log(\"State main: \", book)}\n          <img\n            src={\n              book.volumeInfo.imageLinks.small ||\n              book.volumeInfo.imageLinks.thumbnail\n            }\n            alt=\"Book Cover\"\n          />\n          <div className={details.description}>\n            <h2>\n              <span>Title: </span>\n              {book.volumeInfo.title}\n            </h2>\n            <h3>\n              <span>Author:</span>\n              {book.volumeInfo.authors}\n            </h3>\n            <p>\n              <strong>Book Description: </strong>\n              {book.volumeInfo.description}\n            </p>\n          </div>\n          <div className={details.details}>\n            <p>\n              <strong>Publisher: </strong> {book.volumeInfo.publisher}\n            </p>\n            <p>\n              <strong>Publication Date: </strong>{\" \"}\n              {book.volumeInfo.publishedDate}\n            </p>\n            <p>\n              <strong>Pages: </strong> {book.volumeInfo.printedPageCount}\n            </p>\n            <p>\n              <strong>Digital Version: </strong>{\" \"}\n              <a\n                rel=\"noopener noreferrer\"\n                href={`${book.accessInfo.webReaderLink})`}\n                target=\"_blank\"\n              >\n                Click here to view the book online\n              </a>\n              {console.log(\"page\", book.accessInfo.webReaderLink)}\n            </p>\n          </div>\n        </main>\n      )\n    );\n  }\n}\n\nexport default Details;\n","import React from \"react\";\nimport styles from \"../styles/App.module.scss\";\nimport Book from \"./EachBook\";\nimport Loader from \"./Loader\";\nimport { connect } from \"react-redux\";\nimport { toggleFavourite } from \"../actions/action\";\n\nconst Favourties = props => {\n  const { books } = props.bookState;\n\n  const handleFavoriteToggle = id => {\n    props.toggleFavourite(id);\n    console.log(id);\n  };\n  if (books.length === 0) return <Loader />;\n  return (\n    <main className={styles.main}>\n      {books\n        .filter(book => book.isFavourite)\n        .map(book => {\n          return (\n            <Book\n              key={book.id}\n              book={book}\n              onLike={bookId => handleFavoriteToggle(bookId)}\n            />\n          );\n        })}\n    </main>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { bookState: state };\n};\nexport default connect(\n  mapStateToProps,\n  { toggleFavourite }\n)(Favourties);\n","import React from \"react\";\nimport styles from \"../styles/header.module.scss\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = () => (\n  <React.Fragment>\n    <header className={styles.header}>\n      <h1 className={styles.h1}>Vakhtang Nodadze Book API</h1>\n      <nav className={styles.nav}>\n        <ul className={styles.ul}>\n          <li className={styles.li}>\n            <NavLink to=\"/\">Home</NavLink>\n          </li>\n          <li className={styles.li}>\n            <NavLink to=\"/favourites\">Favourites</NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  </React.Fragment>\n);\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"../styles/Footer.module.scss\";\n\nconst footer = () => (\n  <React.Fragment>\n    <footer className={styles.footer}>\n      <h2>Copyright Vakhtang Nodadze &copy;</h2>\n    </footer>\n  </React.Fragment>\n);\n\nexport default footer;\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport Books from \"./components/Books\";\nimport Details from \"./components/Details\";\nimport Favourites from \"./components/Favourites\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { connect } from \"react-redux\";\nimport { fetchBooksSuccess, fetchBooks } from \"../src/actions/action\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchBooksActions();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Books} />\n            <Route exact path=\"/details/:id\" component={Details} />\n            <Route exact path=\"/favourites\" component={Favourites} />\n          </Switch>\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  booksActions: bookData => dispatch(fetchBooksSuccess(bookData)),\n  fetchBooksActions: query => dispatch(fetchBooks(query))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ActionTypes from \"../actions/action\";\n\nconst initialState = {\n  books: []\n};\n\nexport default function RootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.FETCH_SUCCESS:\n      return {\n        ...state,\n        books: action.payload.map(book => ({ ...book, isFavourite: false }))\n      };\n    case ActionTypes.TOGGLE_FAVOURITE:\n      return {\n        ...state,\n        books: state.books.map(book =>\n          book.id === action.id\n            ? { ...book, isFavourite: !book.isFavourite }\n            : book\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import Books from \"./components/Books\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport RootReducer from \"../src/reducers/reducer\";\n// import store from \"./store/store\";\n\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst middleware = [thunk];\nconst store = createStore(\n  RootReducer,\n  enhancer(applyMiddleware(...middleware))\n);\n\n// store.subscribe = () => {\n//   console.log(\"index js subscribe\", store.getState());\n// };\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}